// <auto-generated />
using CarShopAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarShopAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240722001819_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarShopAPI.Model.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModelNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarShopAPI.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Samir",
                            IsActive = false,
                            IsAdmin = true,
                            LastName = "Ahmed",
                            PasswordHash = new byte[] { 225, 60, 105, 20, 80, 246, 45, 131, 152, 155, 135, 43, 85, 182, 4, 41, 21, 224, 148, 244, 24, 186, 113, 109, 184, 69, 182, 123, 65, 169, 164, 72, 7, 230, 138, 155, 5, 76, 224, 139, 172, 245, 70, 151, 128, 72, 9, 234, 57, 228, 50, 98, 229, 76, 249, 114, 181, 173, 212, 10, 85, 136, 8, 235 },
                            PasswordSalt = new byte[] { 109, 148, 57, 32, 175, 251, 120, 248, 34, 155, 162, 157, 227, 184, 59, 114, 65, 251, 229, 88, 163, 228, 38, 228, 177, 231, 188, 32, 60, 48, 78, 96, 10, 203, 161, 4, 203, 189, 237, 18, 191, 111, 216, 52, 141, 169, 179, 146, 234, 217, 217, 49, 183, 182, 26, 22, 92, 91, 230, 110, 69, 139, 14, 143, 238, 218, 250, 232, 230, 213, 105, 203, 26, 13, 122, 123, 234, 234, 244, 240, 4, 252, 156, 101, 74, 148, 66, 42, 192, 238, 98, 239, 118, 61, 89, 29, 42, 177, 78, 167, 177, 220, 37, 137, 89, 182, 74, 51, 45, 63, 16, 245, 0, 32, 115, 248, 102, 197, 152, 220, 212, 22, 38, 102, 228, 5, 179, 168 },
                            Username = "captain"
                        });
                });

            modelBuilder.Entity("CarUser", b =>
                {
                    b.Property<int>("RecommendedCarsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("RecommendedCarsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("Recommendation", (string)null);
                });

            modelBuilder.Entity("CarUser", b =>
                {
                    b.HasOne("CarShopAPI.Model.Car", null)
                        .WithMany()
                        .HasForeignKey("RecommendedCarsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarShopAPI.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
