// <auto-generated />
using CarShopAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarShopAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240722012750_UpdateCar")]
    partial class UpdateCar
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarShopAPI.Model.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModelNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarShopAPI.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Samir",
                            IsActive = false,
                            IsAdmin = true,
                            LastName = "Ahmed",
                            PasswordHash = new byte[] { 82, 128, 75, 158, 129, 50, 217, 137, 119, 125, 50, 144, 202, 196, 197, 240, 69, 108, 120, 231, 164, 249, 231, 251, 78, 44, 39, 210, 48, 230, 171, 90, 212, 227, 120, 36, 255, 186, 52, 185, 3, 20, 134, 39, 108, 112, 117, 54, 230, 129, 247, 93, 16, 110, 150, 135, 189, 129, 85, 111, 87, 223, 103, 119 },
                            PasswordSalt = new byte[] { 159, 134, 235, 107, 130, 65, 91, 246, 11, 108, 109, 141, 124, 250, 76, 75, 91, 223, 172, 242, 21, 60, 254, 203, 124, 50, 4, 68, 218, 172, 91, 248, 88, 129, 73, 19, 123, 98, 186, 247, 93, 212, 16, 129, 227, 136, 175, 69, 138, 32, 42, 108, 45, 196, 221, 43, 196, 34, 249, 26, 93, 38, 123, 96, 64, 155, 230, 62, 195, 178, 34, 182, 228, 113, 172, 120, 111, 168, 148, 106, 113, 19, 48, 104, 184, 25, 144, 77, 86, 96, 180, 1, 193, 236, 89, 251, 39, 40, 118, 17, 136, 72, 176, 60, 1, 82, 106, 244, 151, 124, 44, 213, 241, 180, 141, 208, 117, 216, 57, 223, 159, 92, 209, 229, 5, 108, 23, 209 },
                            Username = "captain"
                        });
                });

            modelBuilder.Entity("CarUser", b =>
                {
                    b.Property<int>("RecommendedCarsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("RecommendedCarsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("Recommendation", (string)null);
                });

            modelBuilder.Entity("CarUser", b =>
                {
                    b.HasOne("CarShopAPI.Model.Car", null)
                        .WithMany()
                        .HasForeignKey("RecommendedCarsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarShopAPI.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
