// <auto-generated />
using CarShopAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarShopAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240722013207_UpdateCarUsersList")]
    partial class UpdateCarUsersList
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarShopAPI.Model.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModelNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarShopAPI.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Samir",
                            IsActive = false,
                            IsAdmin = true,
                            LastName = "Ahmed",
                            PasswordHash = new byte[] { 100, 132, 227, 225, 0, 90, 201, 30, 167, 230, 93, 122, 80, 216, 210, 100, 12, 38, 168, 182, 31, 76, 174, 20, 198, 231, 59, 203, 107, 243, 34, 170, 49, 32, 83, 154, 246, 178, 0, 92, 116, 203, 153, 245, 142, 145, 18, 129, 154, 57, 8, 63, 53, 244, 207, 12, 11, 132, 121, 213, 99, 3, 172, 25 },
                            PasswordSalt = new byte[] { 34, 46, 11, 74, 158, 52, 71, 101, 124, 244, 185, 55, 40, 60, 168, 172, 144, 34, 78, 127, 124, 115, 145, 185, 144, 153, 91, 78, 215, 58, 216, 57, 152, 72, 78, 254, 63, 12, 14, 136, 87, 238, 208, 8, 107, 53, 19, 22, 124, 190, 38, 75, 248, 244, 102, 58, 188, 107, 248, 248, 100, 70, 160, 206, 99, 202, 191, 136, 145, 8, 69, 70, 25, 253, 21, 21, 250, 71, 244, 206, 7, 197, 63, 205, 213, 216, 17, 142, 182, 12, 76, 183, 236, 11, 3, 75, 21, 93, 37, 172, 114, 252, 216, 99, 204, 191, 144, 21, 244, 240, 101, 146, 52, 88, 209, 166, 92, 61, 57, 39, 179, 197, 100, 110, 223, 202, 154, 51 },
                            Username = "captain"
                        });
                });

            modelBuilder.Entity("CarUser", b =>
                {
                    b.Property<int>("RecommendedCarsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("RecommendedCarsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("Recommendation", (string)null);
                });

            modelBuilder.Entity("CarUser", b =>
                {
                    b.HasOne("CarShopAPI.Model.Car", null)
                        .WithMany()
                        .HasForeignKey("RecommendedCarsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarShopAPI.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
