using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace CarShopAPI.Migrations
{
    /// <inheritdoc />
    public partial class UpdateCarUsersList : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 100, 132, 227, 225, 0, 90, 201, 30, 167, 230, 93, 122, 80, 216, 210, 100, 12, 38, 168, 182, 31, 76, 174, 20, 198, 231, 59, 203, 107, 243, 34, 170, 49, 32, 83, 154, 246, 178, 0, 92, 116, 203, 153, 245, 142, 145, 18, 129, 154, 57, 8, 63, 53, 244, 207, 12, 11, 132, 121, 213, 99, 3, 172, 25 }, new byte[] { 34, 46, 11, 74, 158, 52, 71, 101, 124, 244, 185, 55, 40, 60, 168, 172, 144, 34, 78, 127, 124, 115, 145, 185, 144, 153, 91, 78, 215, 58, 216, 57, 152, 72, 78, 254, 63, 12, 14, 136, 87, 238, 208, 8, 107, 53, 19, 22, 124, 190, 38, 75, 248, 244, 102, 58, 188, 107, 248, 248, 100, 70, 160, 206, 99, 202, 191, 136, 145, 8, 69, 70, 25, 253, 21, 21, 250, 71, 244, 206, 7, 197, 63, 205, 213, 216, 17, 142, 182, 12, 76, 183, 236, 11, 3, 75, 21, 93, 37, 172, 114, 252, 216, 99, 204, 191, 144, 21, 244, 240, 101, 146, 52, 88, 209, 166, 92, 61, 57, 39, 179, 197, 100, 110, 223, 202, 154, 51 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 82, 128, 75, 158, 129, 50, 217, 137, 119, 125, 50, 144, 202, 196, 197, 240, 69, 108, 120, 231, 164, 249, 231, 251, 78, 44, 39, 210, 48, 230, 171, 90, 212, 227, 120, 36, 255, 186, 52, 185, 3, 20, 134, 39, 108, 112, 117, 54, 230, 129, 247, 93, 16, 110, 150, 135, 189, 129, 85, 111, 87, 223, 103, 119 }, new byte[] { 159, 134, 235, 107, 130, 65, 91, 246, 11, 108, 109, 141, 124, 250, 76, 75, 91, 223, 172, 242, 21, 60, 254, 203, 124, 50, 4, 68, 218, 172, 91, 248, 88, 129, 73, 19, 123, 98, 186, 247, 93, 212, 16, 129, 227, 136, 175, 69, 138, 32, 42, 108, 45, 196, 221, 43, 196, 34, 249, 26, 93, 38, 123, 96, 64, 155, 230, 62, 195, 178, 34, 182, 228, 113, 172, 120, 111, 168, 148, 106, 113, 19, 48, 104, 184, 25, 144, 77, 86, 96, 180, 1, 193, 236, 89, 251, 39, 40, 118, 17, 136, 72, 176, 60, 1, 82, 106, 244, 151, 124, 44, 213, 241, 180, 141, 208, 117, 216, 57, 223, 159, 92, 209, 229, 5, 108, 23, 209 } });
        }
    }
}
