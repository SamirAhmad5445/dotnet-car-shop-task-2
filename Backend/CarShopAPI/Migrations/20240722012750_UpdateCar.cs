using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace CarShopAPI.Migrations
{
    /// <inheritdoc />
    public partial class UpdateCar : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 82, 128, 75, 158, 129, 50, 217, 137, 119, 125, 50, 144, 202, 196, 197, 240, 69, 108, 120, 231, 164, 249, 231, 251, 78, 44, 39, 210, 48, 230, 171, 90, 212, 227, 120, 36, 255, 186, 52, 185, 3, 20, 134, 39, 108, 112, 117, 54, 230, 129, 247, 93, 16, 110, 150, 135, 189, 129, 85, 111, 87, 223, 103, 119 }, new byte[] { 159, 134, 235, 107, 130, 65, 91, 246, 11, 108, 109, 141, 124, 250, 76, 75, 91, 223, 172, 242, 21, 60, 254, 203, 124, 50, 4, 68, 218, 172, 91, 248, 88, 129, 73, 19, 123, 98, 186, 247, 93, 212, 16, 129, 227, 136, 175, 69, 138, 32, 42, 108, 45, 196, 221, 43, 196, 34, 249, 26, 93, 38, 123, 96, 64, 155, 230, 62, 195, 178, 34, 182, 228, 113, 172, 120, 111, 168, 148, 106, 113, 19, 48, 104, 184, 25, 144, 77, 86, 96, 180, 1, 193, 236, 89, 251, 39, 40, 118, 17, 136, 72, 176, 60, 1, 82, 106, 244, 151, 124, 44, 213, 241, 180, 141, 208, 117, 216, 57, 223, 159, 92, 209, 229, 5, 108, 23, 209 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 225, 60, 105, 20, 80, 246, 45, 131, 152, 155, 135, 43, 85, 182, 4, 41, 21, 224, 148, 244, 24, 186, 113, 109, 184, 69, 182, 123, 65, 169, 164, 72, 7, 230, 138, 155, 5, 76, 224, 139, 172, 245, 70, 151, 128, 72, 9, 234, 57, 228, 50, 98, 229, 76, 249, 114, 181, 173, 212, 10, 85, 136, 8, 235 }, new byte[] { 109, 148, 57, 32, 175, 251, 120, 248, 34, 155, 162, 157, 227, 184, 59, 114, 65, 251, 229, 88, 163, 228, 38, 228, 177, 231, 188, 32, 60, 48, 78, 96, 10, 203, 161, 4, 203, 189, 237, 18, 191, 111, 216, 52, 141, 169, 179, 146, 234, 217, 217, 49, 183, 182, 26, 22, 92, 91, 230, 110, 69, 139, 14, 143, 238, 218, 250, 232, 230, 213, 105, 203, 26, 13, 122, 123, 234, 234, 244, 240, 4, 252, 156, 101, 74, 148, 66, 42, 192, 238, 98, 239, 118, 61, 89, 29, 42, 177, 78, 167, 177, 220, 37, 137, 89, 182, 74, 51, 45, 63, 16, 245, 0, 32, 115, 248, 102, 197, 152, 220, 212, 22, 38, 102, 228, 5, 179, 168 } });
        }
    }
}
